worker_processes 10;
error_log /data/logs/nginx.error.log warn;
pid /data/nginx/nginx.pid;

events {
    worker_connections 1024;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /data/logs/nginx.access.log combined;

    client_body_temp_path /data/nginx/tmp/nginx-client-body;
    proxy_temp_path /data/nginx/tmp/nginx-proxy;
    fastcgi_temp_path /data/nginx/tmp/nginx-fastcgi;
    uwsgi_temp_path /data/nginx/tmp/nginx-uwsgi;
    scgi_temp_path /data/nginx/tmp/nginx-scgi;

    sendfile on;

    upstream app_server {
        server 127.0.0.1:8443;
    }

    server {
        listen 1080 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 1443 ssl default_server;
        server_name _;

        ssl_certificate /data/cert.pem;
        ssl_certificate_key /data/privkey.pem;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        keepalive_timeout 5;
        root www;

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass https://app_server;
        }
    }
}
